//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2470
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2470.
// 
namespace CBSolutions.ETH.Web.WebRefNew {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DownloadNewSoap", Namespace="http://tempuri.org/")]
    public class DownloadNew : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public DownloadNew() {
            this.Url = "http://localhost/WebServiceDownloadNew/DownloadNew.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveFile(string FName) {
            object[] results = this.Invoke("RemoveFile", new object[] {
                        FName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveFile(string FName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveFile", new object[] {
                        FName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRemoveFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] DownloadFile(string FName) {
            object[] results = this.Invoke("DownloadFile", new object[] {
                        FName});
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownloadFile(string FName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DownloadFile", new object[] {
                        FName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndDownloadFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadFile(string strFileName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] objFile, string strReturn) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        strFileName,
                        objFile,
                        strReturn});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadFile(string strFileName, System.Byte[] objFile, string strReturn, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadFile", new object[] {
                        strFileName,
                        objFile,
                        strReturn}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUploadFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFileNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadFileNew(string strFileName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] objFile, string strReturn, string strChildBuyer) {
            object[] results = this.Invoke("UploadFileNew", new object[] {
                        strFileName,
                        objFile,
                        strReturn,
                        strChildBuyer});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadFileNew(string strFileName, System.Byte[] objFile, string strReturn, string strChildBuyer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadFileNew", new object[] {
                        strFileName,
                        objFile,
                        strReturn,
                        strChildBuyer}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUploadFileNew(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckFile(string strFileName, string strChildBuyer) {
            object[] results = this.Invoke("CheckFile", new object[] {
                        strFileName,
                        strChildBuyer});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckFile(string strFileName, string strChildBuyer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckFile", new object[] {
                        strFileName,
                        strChildBuyer}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoveFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveFile(string sFileName, string dFileName) {
            this.Invoke("MoveFile", new object[] {
                        sFileName,
                        dFileName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveFile(string sFileName, string dFileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveFile", new object[] {
                        sFileName,
                        dFileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndMoveFile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoveFileCoop", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MoveFileCoop(string sFileName, string dFileName) {
            object[] results = this.Invoke("MoveFileCoop", new object[] {
                        sFileName,
                        dFileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveFileCoop(string sFileName, string dFileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveFileCoop", new object[] {
                        sFileName,
                        dFileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndMoveFileCoop(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoveFileNL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveFileNL(string sFileName, string dFileName) {
            this.Invoke("MoveFileNL", new object[] {
                        sFileName,
                        dFileName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveFileNL(string sFileName, string dFileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveFileNL", new object[] {
                        sFileName,
                        dFileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndMoveFileNL(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GKRFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GKRFiles(string strGKRFolderPath) {
            object[] results = this.Invoke("GKRFiles", new object[] {
                        strGKRFolderPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGKRFiles(string strGKRFolderPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GKRFiles", new object[] {
                        strGKRFolderPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGKRFiles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageStream", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] GetImageStream(string sFileName) {
            object[] results = this.Invoke("GetImageStream", new object[] {
                        sFileName});
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetImageStream(string sFileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetImageStream", new object[] {
                        sFileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndGetImageStream(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPagesInBytes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] GetAllPagesInBytes(string sFileName) {
            object[] results = this.Invoke("GetAllPagesInBytes", new object[] {
                        sFileName});
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllPagesInBytes(string sFileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllPagesInBytes", new object[] {
                        sFileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndGetAllPagesInBytes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPagesNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] GetAllPagesNew(string file) {
            object[] results = this.Invoke("GetAllPagesNew", new object[] {
                        file});
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllPagesNew(string file, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllPagesNew", new object[] {
                        file}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndGetAllPagesNew(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMultiPages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] GetMultiPages(string sfile, int iIndex) {
            object[] results = this.Invoke("GetMultiPages", new object[] {
                        sfile,
                        iIndex});
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMultiPages(string sfile, int iIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMultiPages", new object[] {
                        sfile,
                        iIndex}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndGetMultiPages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPageCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPageCount(string file) {
            object[] results = this.Invoke("GetPageCount", new object[] {
                        file});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPageCount(string file, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPageCount", new object[] {
                        file}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetPageCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
    }
}
