//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2470
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2470.
// 
namespace CBSolutions.ETH.Web.TwinfieldProcessXml {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProcessXmlSoap", Namespace="http://www.twinfield.com/")]
    public class ProcessXml : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public Header HeaderValue;
        
        /// <remarks/>
        public ProcessXml() {
            this.Url = "https://c1.twinfield.com/webservices/processxml.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.twinfield.com/ProcessXmlString", RequestNamespace="http://www.twinfield.com/", ResponseNamespace="http://www.twinfield.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessXmlString(string xmlRequest) {
            object[] results = this.Invoke("ProcessXmlString", new object[] {
                        xmlRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProcessXmlString(string xmlRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProcessXmlString", new object[] {
                        xmlRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndProcessXmlString(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.twinfield.com/ProcessXmlDocument", RequestNamespace="http://www.twinfield.com/", ResponseNamespace="http://www.twinfield.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ProcessXmlDocument(System.Xml.XmlNode xmlRequest) {
            object[] results = this.Invoke("ProcessXmlDocument", new object[] {
                        xmlRequest});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProcessXmlDocument(System.Xml.XmlNode xmlRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProcessXmlDocument", new object[] {
                        xmlRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndProcessXmlDocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.twinfield.com/ProcessXmlCompressed", RequestNamespace="http://www.twinfield.com/", ResponseNamespace="http://www.twinfield.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] ProcessXmlCompressed([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] xmlRequest) {
            object[] results = this.Invoke("ProcessXmlCompressed", new object[] {
                        xmlRequest});
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProcessXmlCompressed(System.Byte[] xmlRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProcessXmlCompressed", new object[] {
                        xmlRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndProcessXmlCompressed(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.twinfield.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.twinfield.com/", IsNullable=false)]
    public class Header : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string SessionID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr;
    }
}
